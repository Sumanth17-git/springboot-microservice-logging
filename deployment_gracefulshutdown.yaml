apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-app
  labels:
    app: springboot-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8881"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      terminationGracePeriodSeconds: 30  # Delay SIGKILL for 30s
      containers:
      - name: springboot-app
        image: sumanth17121988/springbootmetric:1
        ports:
        - name: metrics-port
          containerPort: 8881
        resources:
          limits:
            cpu: "500m"
            memory: "256Mi"
          requests:
            cpu: "250m"
            memory: "128Mi"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8881
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 2
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8881
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 2
      # Pre-stop hook gives time for traffic to drain and cleanup to complete
      lifecycle:
        preStop:
          exec:
            command: ["/bin/sh", "-c", "echo Graceful shutdown && sleep 10"]
---
apiVersion: v1
kind: Service
metadata:
  name: springboot-app-service
  labels:
    prometheus: monitored
spec:
  selector:
    app: springboot-app
  ports:
    - name: metrics-port
      protocol: TCP
      port: 8881
      targetPort: 8881
  type: LoadBalancer

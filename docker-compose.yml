version: "3.8"

services:
  app:
    image: sumanth17121988/springboot-app:otel
    container_name: springboot-app
    ports:
      - "8881:8881"
    environment:
      # Traces -> gRPC (4317)
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_TRACES_PROTOCOL=grpc
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_TRACES_SAMPLER=always_on
      # Logs -> HTTP (4318)
      - OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=http://otel-collector:4318/v1/logs
      - OTEL_EXPORTER_OTLP_LOGS_PROTOCOL=http/protobuf
      - OTEL_LOGS_EXPORTER=otlp
      # Disable OTel metrics (use Prometheus scrape instead)
      - OTEL_METRICS_EXPORTER=none
      # Identity
      - OTEL_SERVICE_NAME=java-service
      - OTEL_RESOURCE_ATTRIBUTES=env=dev
      - OTEL_INSTRUMENTATION_LOGBACK_APPENDER_EXPERIMENTAL_CAPTURE_MDC_ATTRIBUTES=*
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/otel/opentelemetry-javaagent.jar -Dotel.metrics.exporter=none
      # (optional) override service/env here instead of baking in the image
      # - OTEL_SERVICE_NAME=java-service
      # - OTEL_RESOURCE_ATTRIBUTES=env=dev
    depends_on:
      - otel-collector
      - prometheus
      - tempo
      - loki
      - grafana
    networks: [default]
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command: ["--config.file=/etc/prometheus/prometheus.yml","--storage.tsdb.retention.time=2d"]
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks: [default]

  loki:
    image: grafana/loki:3.0.0
    container_name: loki
    ports:
      - "3100:3100"
    # default local config is fine for a demo
    networks: [default]
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    ports:
      - "3200:3200"
    command: ["-config.file=/etc/tempo.yaml"]
    # You said the file is 'temp.yml'; we mount it as tempo.yaml inside the container
    volumes:
      - ./observability/tempo.yml:/etc/tempo.yaml:ro
    networks: [default]

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.100.0
    container_name: otel-collector
    command: ["--config=/etc/otelcol/config.yaml"]
    volumes:
      - ./observability/otelcol-config.yml:/etc/otelcol/config.yaml:ro
    ports:
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP (optional)
    networks: [default]

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
      - loki
      - tempo
    networks: [default]
# --- Custom bridge network (Compose will create it automatically) ---
networks:
  default:
    name: opentelemetry-demo
    driver: bridge
